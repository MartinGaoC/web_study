{"ast":null,"code":"export default function combineReducers(reducers) {\n  //  从老状态和action中得到新的状态\n  return function (state = {}, action) {\n    let nextState = {};\n\n    for (let key in reducers) {\n      nextState[key] = reducers[key](state[key], action);\n    }\n\n    return nextState;\n  };\n}","map":{"version":3,"sources":["/Users/gaochao/Public/web_study/2.redux/src/redux/combineReducers.js"],"names":["combineReducers","reducers","state","action","nextState","key"],"mappings":"AAAA,eAAe,SAASA,eAAT,CAAyBC,QAAzB,EAAkC;AAC7C;AACA,SAAO,UAASC,KAAK,GAAC,EAAf,EAAkBC,MAAlB,EAAyB;AAC5B,QAAIC,SAAS,GAAG,EAAhB;;AACA,SAAI,IAAIC,GAAR,IAAeJ,QAAf,EAAwB;AACpBG,MAAAA,SAAS,CAACC,GAAD,CAAT,GAAiBJ,QAAQ,CAACI,GAAD,CAAR,CAAcH,KAAK,CAACG,GAAD,CAAnB,EAAyBF,MAAzB,CAAjB;AACH;;AACD,WAAOC,SAAP;AACH,GAND;AAOH","sourcesContent":["export default function combineReducers(reducers){\n    //  从老状态和action中得到新的状态\n    return function(state={},action){\n        let nextState = {};\n        for(let key in reducers){\n            nextState[key] = reducers[key](state[key],action);\n        }\n        return nextState;\n    }\n}"]},"metadata":{},"sourceType":"module"}