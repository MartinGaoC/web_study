{"ast":null,"code":"export default function createStore(reducer) {\n  let state;\n  let listeners = [];\n\n  function getState() {\n    return state;\n  } // action是有格式要求，第一个必须是一个纯对象 new Object {}  第二必须有一个type属性\n\n\n  function dispatch(action) {\n    state = reducer(state, action);\n    listeners.forEach(l => l());\n  }\n\n  function subscribe(listener) {\n    console.log(listeners);\n    listeners.push(listener); // 这是把自己这个监听函数添加到数组中\n\n    return function () {\n      listeners = listeners.filter(item => item !== listener); // 这是过滤  把自己这个监听函数从数组中删除\n    };\n  }\n\n  dispatch({\n    type: '@@REDUX/INIT'\n  });\n  return {\n    getState,\n    // 获取\n    dispatch,\n    // 派发\n    subscribe //  订阅\n\n  };\n}","map":{"version":3,"sources":["/Users/gaochao/Public/web_study/2.redux/src/redux/createStore.js"],"names":["createStore","reducer","state","listeners","getState","dispatch","action","forEach","l","subscribe","listener","console","log","push","filter","item","type"],"mappings":"AAAA,eAAe,SAASA,WAAT,CAAqBC,OAArB,EAA6B;AACxC,MAAIC,KAAJ;AACA,MAAIC,SAAS,GAAG,EAAhB;;AACA,WAASC,QAAT,GAAmB;AACf,WAAOF,KAAP;AACH,GALuC,CAMxC;;;AACA,WAASG,QAAT,CAAkBC,MAAlB,EAAyB;AACrBJ,IAAAA,KAAK,GAAGD,OAAO,CAACC,KAAD,EAAOI,MAAP,CAAf;AACAH,IAAAA,SAAS,CAACI,OAAV,CAAkBC,CAAC,IAAEA,CAAC,EAAtB;AACH;;AACD,WAASC,SAAT,CAAmBC,QAAnB,EAA4B;AACxBC,IAAAA,OAAO,CAACC,GAAR,CAAYT,SAAZ;AACAA,IAAAA,SAAS,CAACU,IAAV,CAAeH,QAAf,EAFwB,CAEC;;AACzB,WAAO,YAAU;AACbP,MAAAA,SAAS,GAAGA,SAAS,CAACW,MAAV,CAAiBC,IAAI,IAAEA,IAAI,KAAGL,QAA9B,CAAZ,CADa,CACwC;AACxD,KAFD;AAGH;;AACDL,EAAAA,QAAQ,CAAC;AAACW,IAAAA,IAAI,EAAC;AAAN,GAAD,CAAR;AACA,SAAO;AACHZ,IAAAA,QADG;AACQ;AACXC,IAAAA,QAFG;AAES;AACZI,IAAAA,SAHG,CAGS;;AAHT,GAAP;AAMH","sourcesContent":["export default function createStore(reducer){\n    let state;\n    let listeners = [];\n    function getState(){\n        return state;\n    }\n    // action是有格式要求，第一个必须是一个纯对象 new Object {}  第二必须有一个type属性\n    function dispatch(action){\n        state = reducer(state,action);\n        listeners.forEach(l=>l());\n    }\n    function subscribe(listener){\n        console.log(listeners)\n        listeners.push(listener) // 这是把自己这个监听函数添加到数组中\n        return function(){\n            listeners = listeners.filter(item=>item!==listener)  // 这是过滤  把自己这个监听函数从数组中删除\n        }\n    }\n    dispatch({type:'@@REDUX/INIT'})\n    return {\n        getState,  // 获取\n        dispatch,   // 派发\n        subscribe   //  订阅\n    }\n    \n}"]},"metadata":{},"sourceType":"module"}