{"ast":null,"code":"// // import * as types from '../action-types'\n// // export default function reducer (state={number: 0}, action){\n// //     switch(action.type){\n// //         case types.INCREMENT:\n// //             return {number: state.number+ 1};\n// //         case types.DECREMENT:\n// //             return {number: state.number- 1}\n// //         default:\n// //             return state\n// //     }\n// // }\nimport counter from './counter';\nimport counter1 from './counter1';\nimport counter2 from './counter2';\nimport { combineReducers } from '../../redux'; // function combineReducers (reducers){\n//     return function (state={}, action) {\n//         let nextStatus = {};\n//         for(let key in reducers){\n//             nextStatus[key] = reducers[key](state[key], action)\n//         }\n//         return nextStatus\n//     }\n// }\n\nlet reducers = combineReducers({\n  counter1,\n  counter2,\n  counter\n});\nexport default reducers;","map":{"version":3,"sources":["/Users/gaochao/Public/web_study/2.redux/src/store/reducers/index.js"],"names":["counter","counter1","counter2","combineReducers","reducers"],"mappings":"AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,OAAP,MAAoB,WAApB;AAEA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,eAAT,QAAgC,aAAhC,C,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACA,IAAIC,QAAQ,GAAGD,eAAe,CAAC;AAC3BF,EAAAA,QAD2B;AAE3BC,EAAAA,QAF2B;AAG3BF,EAAAA;AAH2B,CAAD,CAA9B;AAMA,eAAeI,QAAf","sourcesContent":["// // import * as types from '../action-types'\n\n// // export default function reducer (state={number: 0}, action){\n// //     switch(action.type){\n// //         case types.INCREMENT:\n// //             return {number: state.number+ 1};\n// //         case types.DECREMENT:\n// //             return {number: state.number- 1}\n// //         default:\n// //             return state\n// //     }\n// // }\nimport counter from './counter';\n\nimport counter1 from './counter1';\nimport counter2 from './counter2';\nimport { combineReducers } from '../../redux';\n// function combineReducers (reducers){\n//     return function (state={}, action) {\n//         let nextStatus = {};\n//         for(let key in reducers){\n//             nextStatus[key] = reducers[key](state[key], action)\n//         }\n//         return nextStatus\n//     }\n   \n// }\nlet reducers = combineReducers({\n    counter1,\n    counter2,\n    counter\n})\n\nexport default reducers"]},"metadata":{},"sourceType":"module"}