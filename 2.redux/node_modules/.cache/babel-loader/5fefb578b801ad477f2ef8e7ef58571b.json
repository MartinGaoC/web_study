{"ast":null,"code":"function bindActionCreator(actions, dispatch) {\n  return function (...args) {\n    return dispatch(actions(...args));\n  };\n}\n\nexport default function (actions, dispatch) {\n  if (typeof actions === 'function') {\n    return bindActionCreator(actions, dispatch);\n  }\n\n  let boundActionCreators = {};\n\n  for (let key in actions) {\n    boundActionCreators[key] = bindActionCreator(actions[key], dispatch);\n  }\n\n  return boundActionCreators;\n} // // 此方法只能接收一个actionCreator actionCreator是一个函数\n// function bindActionCreator(actionCreator,dispatch){\n//     return function(...args){\n//         dispatch(actionCreator(...args));\n//     }\n// }\n// export default function(actionCreators,dispatch){\n//     if(typeof actionCreators == 'function'){\n//         return bindActionCreator(actionCreators,dispatch)\n//     }\n//     const boundActionCreators = {}; // bound是bind的过去式或者完成式\n//     for(const key in actionCreators){\n//         boundActionCreators[key] = bindActionCreator(actionCreators[key],dispatch);\n//     }\n//     return boundActionCreators;\n// }","map":{"version":3,"sources":["/Users/gaochao/Public/web_study/2.redux/src/redux/bindActionCreators.js"],"names":["bindActionCreator","actions","dispatch","args","boundActionCreators","key"],"mappings":"AAAA,SAASA,iBAAT,CAA4BC,OAA5B,EAAqCC,QAArC,EAA8C;AAC1C,SAAO,UAAU,GAAGC,IAAb,EAAmB;AACtB,WAAOD,QAAQ,CAACD,OAAO,CAAC,GAAGE,IAAJ,CAAR,CAAf;AACH,GAFD;AAGH;;AAGD,eAAe,UAAUF,OAAV,EAAmBC,QAAnB,EAA6B;AACxC,MAAG,OAAOD,OAAP,KAAmB,UAAtB,EAAiC;AAC7B,WAAOD,iBAAiB,CAACC,OAAD,EAAUC,QAAV,CAAxB;AACH;;AAED,MAAIE,mBAAmB,GAAG,EAA1B;;AAEA,OAAI,IAAIC,GAAR,IAAeJ,OAAf,EAAuB;AACnBG,IAAAA,mBAAmB,CAACC,GAAD,CAAnB,GAA2BL,iBAAiB,CAACC,OAAO,CAACI,GAAD,CAAR,EAAeH,QAAf,CAA5C;AACH;;AACD,SAAOE,mBAAP;AACH,C,CAQD;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["function bindActionCreator (actions, dispatch){\n    return function (...args) {\n        return dispatch(actions(...args))\n    }\n}\n\n\nexport default function (actions, dispatch) {\n    if(typeof actions === 'function'){\n        return bindActionCreator(actions, dispatch)\n    } \n\n    let boundActionCreators = {}\n\n    for(let key in actions){\n        boundActionCreators[key] = bindActionCreator(actions[key], dispatch)\n    }\n    return boundActionCreators\n}\n\n\n\n\n\n\n\n// // 此方法只能接收一个actionCreator actionCreator是一个函数\n\n// function bindActionCreator(actionCreator,dispatch){\n//     return function(...args){\n//         dispatch(actionCreator(...args));\n//     }\n// }\n// export default function(actionCreators,dispatch){\n//     if(typeof actionCreators == 'function'){\n//         return bindActionCreator(actionCreators,dispatch)\n//     }\n//     const boundActionCreators = {}; // bound是bind的过去式或者完成式\n//     for(const key in actionCreators){\n//         boundActionCreators[key] = bindActionCreator(actionCreators[key],dispatch);\n//     }\n//     return boundActionCreators;\n// }\n\n"]},"metadata":{},"sourceType":"module"}