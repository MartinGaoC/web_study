{"ast":null,"code":"var _jsxFileName = \"/Users/gaochao/Public/web_study/hooks/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n/**\n * useMemo useCallback\n * 1. 优化，有一个依赖项，如果依赖的值变化了就会更新，如果依赖项没有变化就不更新\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nlet Child = () => {\n  return /*#__PURE__*/_jsxDEV(\"button\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Child;\n\nlet App = () => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Child, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_c2 = App;\n\nfunction render() {\n  hookIndex = 0; // 每次渲染的时候需要清空下标\n\n  ReactDOM.render( /*#__PURE__*/_jsxDEV(Conser, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 19\n  }, this), document.getElementById('root'));\n}\n\nrender();\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Child\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["/Users/gaochao/Public/web_study/hooks/src/index.js"],"names":["React","ReactDOM","Child","App","render","hookIndex","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AAEA;AACA;AACA;AACA;;;;;AAEA,IAAIC,KAAK,GAAG,MAAK;AACf,sBACE;AAAA;AAAA;AAAA;AAAA,UADF;AAGD,CAJD;;KAAIA,K;;AAKJ,IAAIC,GAAG,GAAG,MAAK;AACb,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAMD,CAPD;;MAAIA,G;;AAQJ,SAASC,MAAT,GAAkB;AAChBC,EAAAA,SAAS,GAAG,CAAZ,CADgB,CACF;;AACdJ,EAAAA,QAAQ,CAACG,MAAT,eAAgB,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,UAAhB,EAA4BE,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAA5B;AACD;;AACDH,MAAM","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom'\n\n/**\n * useMemo useCallback\n * 1. 优化，有一个依赖项，如果依赖的值变化了就会更新，如果依赖项没有变化就不更新\n */\n\nlet Child = () =>{\n  return(\n    <button></button>\n  )\n}\nlet App = () =>{\n  return(\n    <>\n      <input />\n      <Child />\n    </>\n  )\n}\nfunction render() {\n  hookIndex = 0 // 每次渲染的时候需要清空下标\n  ReactDOM.render(<Conser />, document.getElementById('root'))\n}\nrender()\n"]},"metadata":{},"sourceType":"module"}