{"ast":null,"code":"var _jsxFileName = \"/Users/gaochao/Public/web_study/hooks/src/index.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n/**\n * useMemo useCallback\n * 1. 优化，有一个依赖项，如果依赖的值变化了就会更新，如果依赖项没有变化就不更新\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nlet Child = ({\n  data,\n  onButtonClick\n}) => {\n  console.log('child render');\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: () => onButtonClick(),\n    children: data.number\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Child;\n\nlet App = () => {\n  _s();\n\n  let [number, setNumber] = React.useState(0);\n  let [name, setName] = React.useState('hooks');\n  let data = {\n    number\n  };\n\n  let addClick = () => setNumber(number + 1);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      value: name,\n      onChange: e => setName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Child, {\n      data: data,\n      onButtonClick: addClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(App, \"X+xGURpaUy3dP8Cf4ZATdd2X7aw=\");\n\n_c2 = App;\n\nfunction render() {\n  hookIndex = 0; // 每次渲染的时候需要清空下标\n\n  ReactDOM.render( /*#__PURE__*/_jsxDEV(Conser, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 19\n  }, this), document.getElementById('root'));\n}\n\nrender();\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Child\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["/Users/gaochao/Public/web_study/hooks/src/index.js"],"names":["React","ReactDOM","Child","data","onButtonClick","console","log","number","App","setNumber","useState","name","setName","addClick","e","target","value","render","hookIndex","document","getElementById"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AAEA;AACA;AACA;AACA;;;;;AAEA,IAAIC,KAAK,GAAG,CAAC;AAACC,EAAAA,IAAD;AAAOC,EAAAA;AAAP,CAAD,KAA0B;AACpCC,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACA,sBACE;AAAQ,IAAA,OAAO,EAAE,MAAIF,aAAa,EAAlC;AAAA,cAAuCD,IAAI,CAACI;AAA5C;AAAA;AAAA;AAAA;AAAA,UADF;AAGD,CALD;;KAAIL,K;;AAMJ,IAAIM,GAAG,GAAG,MAAK;AAAA;;AACb,MAAI,CAACD,MAAD,EAASE,SAAT,IAAsBT,KAAK,CAACU,QAAN,CAAe,CAAf,CAA1B;AACA,MAAI,CAACC,IAAD,EAAOC,OAAP,IAAkBZ,KAAK,CAACU,QAAN,CAAe,OAAf,CAAtB;AACA,MAAIP,IAAI,GAAG;AAACI,IAAAA;AAAD,GAAX;;AACA,MAAIM,QAAQ,GAAG,MAAIJ,SAAS,CAACF,MAAM,GAAC,CAAR,CAA5B;;AACA,sBACE;AAAA,4BACE;AAAO,MAAA,KAAK,EAAEI,IAAd;AAAoB,MAAA,QAAQ,EAAGG,CAAD,IAAMF,OAAO,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV;AAA3C;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAEb,IAAb;AAAmB,MAAA,aAAa,EAAEU;AAAlC;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAMD,CAXD;;GAAIL,G;;MAAAA,G;;AAYJ,SAASS,MAAT,GAAkB;AAChBC,EAAAA,SAAS,GAAG,CAAZ,CADgB,CACF;;AACdjB,EAAAA,QAAQ,CAACgB,MAAT,eAAgB,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,UAAhB,EAA4BE,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAA5B;AACD;;AACDH,MAAM","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom'\n\n/**\n * useMemo useCallback\n * 1. 优化，有一个依赖项，如果依赖的值变化了就会更新，如果依赖项没有变化就不更新\n */\n\nlet Child = ({data, onButtonClick}) =>{\n  console.log('child render')\n  return(\n    <button onClick={()=>onButtonClick()}>{data.number}</button>\n  )\n}\nlet App = () =>{\n  let [number, setNumber] = React.useState(0)\n  let [name, setName] = React.useState('hooks')\n  let data = {number}\n  let addClick = ()=>setNumber(number+1)\n  return(\n    <>\n      <input value={name} onChange={(e)=> setName(e.target.value)}/>\n      <Child data={data} onButtonClick={addClick}/>\n    </>\n  )\n}\nfunction render() {\n  hookIndex = 0 // 每次渲染的时候需要清空下标\n  ReactDOM.render(<Conser />, document.getElementById('root'))\n}\nrender()\n"]},"metadata":{},"sourceType":"module"}